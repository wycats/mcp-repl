[package]
name = "nu-mcp-repl"
version = "0.1.0"
edition = "2024"
resolver = "3"
description = "A Nushell-based REPL for MCP (Model Context Protocol)"
repository = "https://github.com/wycats/mcp-repl"
license = "MIT"
keywords = ["mcp", "repl", "nushell"]
categories = ["development"]

[dependencies]

# Other dependencies
anyhow = "1.0"
clap = { version = "4.3", features = ["derive", "env"] }
env_logger = "0.11.8"
log = "0.4"
# Nushell core dependencies - use a known compatible set of versions

nu-cli = { version = "0.103.0" }
nu-cmd-lang = { version = "0.103.0" }
nu-command = { version = "0.103.0" }
nu-engine = { version = "0.103.0" }
nu-json = { version = "0.103.0" }
nu-path = { version = "0.103.0" }
nu-protocol = { version = "0.103.0", features = ["plugin"] }
nu-table = "0.103.0"
nu-color-config = "0.103.0"
nu-utils = "0.103.0"
zip = "=2.5.0"

# MCP SDK for interacting with MCP servers
rmcp = { git = "https://github.com/modelcontextprotocol/rust-sdk", package = "rmcp", features = [
    "client",
    "transport-child-process",
    "transport-io",
    "transport-sse",
    "transport-sse-server",
] }
serde_json = { version = "1.0.140" }
tokio = { version = "1.28", features = ["rt-multi-thread"] }
shell-words = "1.1.0"
once_cell = "1.19.0"
dirs = "5.0.1"
async-trait = "0.1.88"
indexmap = "2.9.0"
config = { version = "0.15.11", features = ["indexmap", "preserve_order"] }
serde = { version = "1.0.219", features = ["derive"] }
envy = "0.4.2"
derive-new = "0.7.0"
async-lock = "3.4.0"
async-once-cell = { version = "0.5.4", features = ["critical-section", "std"] }
critical-section = { version = "1.2.0", features = ["std"] }
todo_by = "0.3.0"
nu-ansi-term = { version = "0.50.1", features = [
    "derive_serde_style",
    "serde",
] }

[lints.clippy]
cargo = { level = "deny", priority = -1 }
multiple_crate_versions = "allow"

suspicious = { level = "deny", priority = -1 }
correctness = { level = "deny", priority = -1 }
pedantic = { level = "warn", priority = -1 }
style = { level = "deny", priority = -1 }
perf = { level = "deny", priority = -1 }
nursery = { level = "warn", priority = -1 }

module_name_repetitions = "allow"
literal_string_with_formatting_args = "allow"
missing_errors_doc = "allow"
disallowed-macros = "warn"
print_stdout = "deny"
print_stderr = "deny"
panic_in_result_fn = "deny"
too_many_lines = "allow"
